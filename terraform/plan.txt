Acquiring state lock. This may take a few moments...

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # module.eks.data.aws_ami.eks-workers[0m will be read during apply
  # (config refers to values not yet known)[0m[0m
[0m [36m<=[0m[0m data "aws_ami" "eks-workers"  {
      [32m+[0m [0m[1m[0marchitecture[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mblock_device_mappings[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mcreation_date[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mena_support[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mhypervisor[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mimage_location[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mimage_owner_alias[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mimage_type[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mkernel_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mmost_recent[0m[0m           = true
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mowners[0m[0m                = [
          [32m+[0m [0m"602401143452",
        ]
      [32m+[0m [0m[1m[0mplatform[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mplatform_details[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mproduct_codes[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpublic[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mramdisk_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mroot_device_name[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mroot_device_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mroot_snapshot_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0msriov_net_support[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mstate_reason[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0musage_operation[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mvirtualization_type[0m[0m   = (known after apply)

      [32m+[0m [0mfilter {
          [32m+[0m [0m[1m[0mname[0m[0m   = "name"
          [32m+[0m [0m[1m[0mvalues[0m[0m = [
              [32m+[0m [0m"amazon-eks-node-1.18-v*",
            ]
        }
    }

[1m  # module.eks.aws_autoscaling_group.eks-asg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "eks-asg" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdefault_cooldown[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mdesired_capacity[0m[0m          = 2
      [32m+[0m [0m[1m[0mforce_delete[0m[0m              = false
      [32m+[0m [0m[1m[0mhealth_check_grace_period[0m[0m = 300
      [32m+[0m [0m[1m[0mhealth_check_type[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mmax_size[0m[0m                  = 4
      [32m+[0m [0m[1m[0mmetrics_granularity[0m[0m       = "1Minute"
      [32m+[0m [0m[1m[0mmin_size[0m[0m                  = 2
      [32m+[0m [0m[1m[0mname[0m[0m                      = "app-dev-beta-asg"
      [32m+[0m [0m[1m[0mprotect_from_scale_in[0m[0m     = false
      [32m+[0m [0m[1m[0mservice_linked_role_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_zone_identifier[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mwait_for_capacity_timeout[0m[0m = "10m"

      [32m+[0m [0mmixed_instances_policy {
          [32m+[0m [0minstances_distribution {
              [32m+[0m [0m[1m[0mon_demand_allocation_strategy[0m[0m            = (known after apply)
              [32m+[0m [0m[1m[0mon_demand_base_capacity[0m[0m                  = 0
              [32m+[0m [0m[1m[0mon_demand_percentage_above_base_capacity[0m[0m = 0
              [32m+[0m [0m[1m[0mspot_allocation_strategy[0m[0m                 = "lowest-price"
              [32m+[0m [0m[1m[0mspot_instance_pools[0m[0m                      = (known after apply)
            }

          [32m+[0m [0mlaunch_template {
              [32m+[0m [0mlaunch_template_specification {
                  [32m+[0m [0m[1m[0mlaunch_template_id[0m[0m   = (known after apply)
                  [32m+[0m [0m[1m[0mlaunch_template_name[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mversion[0m[0m              = "$Latest"
                }

              [32m+[0m [0moverride {
                  [32m+[0m [0m[1m[0minstance_type[0m[0m = "m5.medium"
                }
              [32m+[0m [0moverride {
                  [32m+[0m [0m[1m[0minstance_type[0m[0m = "t3a.medium"
                }
              [32m+[0m [0moverride {
                  [32m+[0m [0m[1m[0minstance_type[0m[0m = "m4.medium"
                }
              [32m+[0m [0moverride {
                  [32m+[0m [0m[1m[0minstance_type[0m[0m = "m5a.medium"
                }
              [32m+[0m [0moverride {
                  [32m+[0m [0m[1m[0minstance_type[0m[0m = "t3.medium"
                }
            }
        }

      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "Name"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "app-dev-beta-eks-worker-node"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "k8s.io/cluster-autoscaler/app-dev-beta-eks"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "owned"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "k8s.io/cluster-autoscaler/enabled"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "true"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "kubernetes.io/cluster/app-dev-beta-eks"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "owned"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "project"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "MPG-app-dev-beta"
        }
    }

[1m  # module.eks.aws_eks_cluster.eks[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eks_cluster" "eks" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mcertificate_authority[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mcreated_at[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mendpoint[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0midentity[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                  = "app-dev-beta-eks"
      [32m+[0m [0m[1m[0mplatform_version[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mrole_arn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                  = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mversion[0m[0m               = "1.18"

      [32m+[0m [0mkubernetes_network_config {
          [32m+[0m [0m[1m[0mservice_ipv4_cidr[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0mcluster_security_group_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mendpoint_private_access[0m[0m   = false
          [32m+[0m [0m[1m[0mendpoint_public_access[0m[0m    = true
          [32m+[0m [0m[1m[0mpublic_access_cidrs[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_instance_profile.workers[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "workers" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "app-dev-beta-iam-instanceprofile"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = "app-dev-beta-workers-iam"
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.eks.aws_iam_role.eks-workers[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "eks-workers" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "app-dev-beta-workers-iam"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_role.eks_cluster[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_cluster" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "app-dev-beta-cluster-iam"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-cluster-AmazonEKSClusterPolicy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-cluster-AmazonEKSClusterPolicy" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-cluster-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-cluster-AmazonEKSServicePolicy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-cluster-AmazonEKSServicePolicy" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-cluster-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-workers-AmazonEC2ContainerRegistryReadOnly[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-workers-AmazonEC2ContainerRegistryReadOnly" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-workers-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-workers-AmazonEKSWorkerNodePolicy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-workers-AmazonEKSWorkerNodePolicy" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-workers-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-workers-AmazonEKS_CNI_Policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-workers-AmazonEKS_CNI_Policy" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-workers-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-workers-eks-alb-ingress-permissions[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-workers-eks-alb-ingress-permissions" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::227735533269:policy/eks-alb-ingress-permissions"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-workers-iam"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.eks-workers-eks-autoscaling-permissions[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "eks-workers-eks-autoscaling-permissions" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::227735533269:policy/EKS-Cluster-Node-AutoScaling"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "app-dev-beta-workers-iam"
    }

[1m  # module.eks.aws_launch_template.eks_launch_template[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_template" "eks_launch_template" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m          = "m5.medium"
      [32m+[0m [0m[1m[0mlatest_version[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "app-dev-beta-template-"
      [32m+[0m [0m[1m[0muser_data[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m = (known after apply)

      [32m+[0m [0mblock_device_mappings {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m = "/dev/xvda"

          [32m+[0m [0mebs {
              [32m+[0m [0m[1m[0miops[0m[0m        = (known after apply)
              [32m+[0m [0m[1m[0mthroughput[0m[0m  = (known after apply)
              [32m+[0m [0m[1m[0mvolume_size[0m[0m = 20
              [32m+[0m [0m[1m[0mvolume_type[0m[0m = (known after apply)
            }
        }

      [32m+[0m [0miam_instance_profile {
          [32m+[0m [0m[1m[0mname[0m[0m = "app-dev-beta-iam-instanceprofile"
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }
    }

[1m  # module.eks.kubernetes_cluster_role.cluster-roles["cluster-admins"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "cluster-roles" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "cluster-admins"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mself_link[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }

      [32m+[0m [0mrule {
          [32m+[0m [0m[1m[0mapi_groups[0m[0m = [
              [32m+[0m [0m"*",
            ]
          [32m+[0m [0m[1m[0mresources[0m[0m  = [
              [32m+[0m [0m"*",
            ]
          [32m+[0m [0m[1m[0mverbs[0m[0m      = [
              [32m+[0m [0m"*",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role.cluster-roles["cluster-users"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_cluster_role" "cluster-roles" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "cluster-users"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mself_link[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }

      [32m+[0m [0mrule {
          [32m+[0m [0m[1m[0mapi_groups[0m[0m = [
              [32m+[0m [0m"*",
            ]
          [32m+[0m [0m[1m[0mresources[0m[0m  = [
              [32m+[0m [0m"*",
            ]
          [32m+[0m [0m[1m[0mverbs[0m[0m      = [
              [32m+[0m [0m"get",
              [32m+[0m [0m"list",
              [32m+[0m [0m"watch",
            ]
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.aws-group["cluster-admins"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "aws-group" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "cluster-admins-clusterrolebinding"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mself_link[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }

      [32m+[0m [0mrole_ref {
          [32m+[0m [0m[1m[0mapi_group[0m[0m = "rbac.authorization.k8s.io"
          [32m+[0m [0m[1m[0mkind[0m[0m      = "ClusterRole"
          [32m+[0m [0m[1m[0mname[0m[0m      = "cluster-admins"
        }

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mapi_group[0m[0m = "rbac.authorization.k8s.io"
          [32m+[0m [0m[1m[0mkind[0m[0m      = "Group"
          [32m+[0m [0m[1m[0mname[0m[0m      = "cluster-admins"
          [32m+[0m [0m[1m[0mnamespace[0m[0m = "default"
        }
    }

[1m  # module.eks.kubernetes_cluster_role_binding.aws-group["cluster-users"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "aws-group" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "cluster-users-clusterrolebinding"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mself_link[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }

      [32m+[0m [0mrole_ref {
          [32m+[0m [0m[1m[0mapi_group[0m[0m = "rbac.authorization.k8s.io"
          [32m+[0m [0m[1m[0mkind[0m[0m      = "ClusterRole"
          [32m+[0m [0m[1m[0mname[0m[0m      = "cluster-users"
        }

      [32m+[0m [0msubject {
          [32m+[0m [0m[1m[0mapi_group[0m[0m = "rbac.authorization.k8s.io"
          [32m+[0m [0m[1m[0mkind[0m[0m      = "Group"
          [32m+[0m [0m[1m[0mname[0m[0m      = "cluster-users"
          [32m+[0m [0m[1m[0mnamespace[0m[0m = "default"
        }
    }

[1m  # module.eks.kubernetes_config_map.aws_auth[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "kubernetes_config_map" "aws_auth" {
      [32m+[0m [0m[1m[0mdata[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)

      [32m+[0m [0mmetadata {
          [32m+[0m [0m[1m[0mgeneration[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m             = "aws-auth"
          [32m+[0m [0m[1m[0mnamespace[0m[0m        = "kube-system"
          [32m+[0m [0m[1m[0mresource_version[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mself_link[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muid[0m[0m              = (known after apply)
        }
    }

[1m  # module.eks.null_resource.sleep[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "null_resource" "sleep" {
      [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
    }

[1m  # module.network.aws_eip.eks_nat_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eks_nat_gateway" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.network.aws_eip.eks_nat_gateway[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "eks_nat_gateway" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # module.network.aws_internet_gateway.eks_ig[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "eks_ig" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name"    = "app-dev-beta-ig"
          [32m+[0m [0m"project" = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # module.network.aws_nat_gateway.eks_nat_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "eks_nat_gateway" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name"    = "app-dev-beta-nat-gateway-1"
          [32m+[0m [0m"project" = "MPG-app-dev-beta"
        }
    }

[1m  # module.network.aws_nat_gateway.eks_nat_gateway[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "eks_nat_gateway" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name"    = "app-dev-beta-nat-gateway-2"
          [32m+[0m [0m"project" = "MPG-app-dev-beta"
        }
    }

[1m  # module.network.aws_route_table.db_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "db_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "0.0.0.0/0"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = ""
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = (known after apply)
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "[REDACTED]/32"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = (known after apply)
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = ""
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rt-db-1"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table.db_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "db_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "0.0.0.0/0"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = ""
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = (known after apply)
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "[REDACTED]/32"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = (known after apply)
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = ""
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rt-db-2"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table.eks_private_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "eks_private_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "0.0.0.0/0"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = ""
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = (known after apply)
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rt-privatesubnets-1"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table.eks_private_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "eks_private_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "0.0.0.0/0"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = ""
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = (known after apply)
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rt-privatesubnets-2"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table.eks_public_subnet[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "eks_public_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_block                = "0.0.0.0/0"
              [32m+[0m [0megress_only_gateway_id    = ""
              [32m+[0m [0mgateway_id                = (known after apply)
              [32m+[0m [0minstance_id               = ""
              [32m+[0m [0mipv6_cidr_block           = ""
              [32m+[0m [0mlocal_gateway_id          = ""
              [32m+[0m [0mnat_gateway_id            = ""
              [32m+[0m [0mnetwork_interface_id      = ""
              [32m+[0m [0mtransit_gateway_id        = ""
              [32m+[0m [0mvpc_endpoint_id           = ""
              [32m+[0m [0mvpc_peering_connection_id = ""
            },
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rt-publicsubnets"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # module.network.aws_route_table_association.db_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "db_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.db_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "db_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.eks_private_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "eks_private_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.eks_private_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "eks_private_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.eks_public_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "eks_public_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.eks_public_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "eks_public_subnet" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # module.network.aws_subnet.db_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "db_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.20.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-dbsubnet-1"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_subnet.db_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "db_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.21.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-dbsubnet-2"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_subnet.eks_private_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "eks_private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.0.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment"                            = "dev-beta"
          [32m+[0m [0m"Name"                                   = "app-dev-beta-privatesubnet-1"
          [32m+[0m [0m"kubernetes.io/cluster/app-dev-beta-eks" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"        = "1"
          [32m+[0m [0m"project"                                = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_subnet.eks_private_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "eks_private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.2.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment"                            = "dev-beta"
          [32m+[0m [0m"Name"                                   = "app-dev-beta-privatesubnet-2"
          [32m+[0m [0m"kubernetes.io/cluster/app-dev-beta-eks" = "shared"
          [32m+[0m [0m"kubernetes.io/role/internal-elb"        = "1"
          [32m+[0m [0m"project"                                = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_subnet.eks_public_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "eks_public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.10.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment"                            = "dev-beta"
          [32m+[0m [0m"Name"                                   = "app-dev-beta-publicsubnet-1"
          [32m+[0m [0m"kubernetes.io/cluster/app-dev-beta-eks" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"                 = "1"
          [32m+[0m [0m"project"                                = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_subnet.eks_public_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "eks_public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-north-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.1.11.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Environment"                            = "dev-beta"
          [32m+[0m [0m"Name"                                   = "app-dev-beta-publicsubnet-2"
          [32m+[0m [0m"kubernetes.io/cluster/app-dev-beta-eks" = "shared"
          [32m+[0m [0m"kubernetes.io/role/elb"                 = "1"
          [32m+[0m [0m"project"                                = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # module.network.aws_vpc.eks_vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "eks_vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0massign_generated_ipv6_cidr_block[0m[0m = false
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                       = "10.1.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m             = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                 = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                             = {
          [32m+[0m [0m"Environment"                            = "dev-beta"
          [32m+[0m [0m"Name"                                   = "app-dev-beta-vpc"
          [32m+[0m [0m"kubernetes.io/cluster/app-dev-beta-eks" = "shared"
          [32m+[0m [0m"project"                                = "MPG-app-dev-beta"
        }
    }

[1m  # module.rds.aws_db_instance.rds_instance[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_instance" "rds_instance" {
      [32m+[0m [0m[1m[0maddress[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mallocated_storage[0m[0m                     = 20
      [32m+[0m [0m[1m[0mapply_immediately[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mauto_minor_version_upgrade[0m[0m            = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mbackup_retention_period[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbackup_window[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mca_cert_identifier[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcharacter_set_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcopy_tags_to_snapshot[0m[0m                 = false
      [32m+[0m [0m[1m[0mdb_subnet_group_name[0m[0m                  = "app-dev-beta-subnetgroup"
      [32m+[0m [0m[1m[0mdelete_automated_backups[0m[0m              = true
      [32m+[0m [0m[1m[0mdeletion_protection[0m[0m                   = true
      [32m+[0m [0m[1m[0mendpoint[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mengine[0m[0m                                = "mariadb"
      [32m+[0m [0m[1m[0mengine_version[0m[0m                        = "10.3"
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0midentifier[0m[0m                            = "app-dev-beta-rds"
      [32m+[0m [0m[1m[0midentifier_prefix[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_class[0m[0m                        = "t3.medium"
      [32m+[0m [0m[1m[0miops[0m[0m                                  = 1000
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mlatest_restorable_time[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mlicense_model[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mmaintenance_window[0m[0m                    = "sat:00:00-sat:03:00"
      [32m+[0m [0m[1m[0mmonitoring_interval[0m[0m                   = 0
      [32m+[0m [0m[1m[0mmonitoring_role_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmulti_az[0m[0m                              = false
      [32m+[0m [0m[1m[0mname[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0moption_group_name[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mparameter_group_name[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword[0m[0m                              = (sensitive value)
      [32m+[0m [0m[1m[0mperformance_insights_enabled[0m[0m          = false
      [32m+[0m [0m[1m[0mperformance_insights_kms_key_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mperformance_insights_retention_period[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mpublicly_accessible[0m[0m                   = false
      [32m+[0m [0m[1m[0mreplicas[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mresource_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mskip_final_snapshot[0m[0m                   = true
      [32m+[0m [0m[1m[0mstatus[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mstorage_encrypted[0m[0m                     = true
      [32m+[0m [0m[1m[0mstorage_type[0m[0m                          = "io1"
      [32m+[0m [0m[1m[0mtags[0m[0m                                  = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "app-dev-beta-rds"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mtimezone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0musername[0m[0m                              = "app_master"
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m                = (known after apply)
    }

[1m  # module.rds.aws_db_subnet_group.rds_subgroup[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "rds_subgroup" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "Managed by Terraform"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "app-dev-beta-subnetgroup"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m  = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group.eks-master[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "eks-master" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Cluster communication with worker nodes"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "SG-app-dev-beta-eks-masters"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "SG-app-dev-beta-eks-masters"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group.eks-rds[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "eks-rds" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for RDS"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "SG-app-dev-beta-rds"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "SG-app-dev-beta-rds"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group.eks-workers[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "eks-workers" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for all worker nodes in the cluster"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "SG-app-dev-beta-eks-workers"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "SG-app-dev-beta-eks-workers"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group.internal_alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "internal_alb" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for ALB Internal - monitoring"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "SG-app-dev-beta-Monitoring-ALB"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "SG-app-dev-beta-Monitoring-ALB"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group.pub_alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "pub_alb" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for ALB Public - cluster"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "SG-app-dev-beta-Pub-ALB"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Environment" = "dev-beta"
          [32m+[0m [0m"Name"        = "SG-app-dev-beta-Pub-ALB"
          [32m+[0m [0m"project"     = "MPG-app-dev-beta"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-cluster-ingress-node-alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-cluster-ingress-node-alb" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow ALB to communicate with pods"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 30000
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-cluster-ingress-node-alb-monitoring[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-cluster-ingress-node-alb-monitoring" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow Monitoring ALB to communicate with pods"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 30000
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-cluster-ingress-node-https[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-cluster-ingress-node-https" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow pods to communicate with the cluster API Server"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-rds-office[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-rds-office" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"[REDACTED]/32",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow Office connect to RDS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 3306
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 3306
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-rds-workers[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-rds-workers" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow workers connect to RDS"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 3306
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 3306
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-workers-ingress-cluster[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-workers-ingress-cluster" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow worker Kubelets and pods to receive communication from the cluster control plane"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 1025
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-workers-ingress-master[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-workers-ingress-master" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow cluster control to receive communication from the worker Kubelets"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 443
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 443
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.securitygroup.aws_security_group_rule.eks-workers-ingress-self[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "eks-workers-ingress-self" {
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow nodes to communicate with each other"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[0m[1mPlan:[0m 57 to add, 0 to change, 0 to destroy.[0m
[0m
[1mChanges to Outputs:[0m
  [32m+[0m [0m[1m[0meks_kubeconfig[0m[0m = (known after apply)[0m
[33m
[1m[33mWarning: [0m[0m[1mValue for undeclared variable[0m

[0mThe root module does not declare a variable named "iam_eks_cni_policy_arn" but
a value was found in file "terraform.tfvars". To use this value, add a
"variable" block to the configuration.

Using a variables file to set an undeclared variable is deprecated and will
become an error in a future release. If you wish to provide certain "global"
settings to all configurations in your organization, use TF_VAR_...
environment variables to set these instead.
[0m[0m
[33m
[1m[33mWarning: [0m[0m[1mValue for undeclared variable[0m

[0mThe root module does not declare a variable named "iam_ec2_cluster_policy_arn"
but a value was found in file "terraform.tfvars". To use this value, add a
"variable" block to the configuration.

Using a variables file to set an undeclared variable is deprecated and will
become an error in a future release. If you wish to provide certain "global"
settings to all configurations in your organization, use TF_VAR_...
environment variables to set these instead.
[0m[0m
[33m
[1m[33mWarning: [0m[0m[1mValue for undeclared variable[0m

[0mThe root module does not declare a variable named "managed_by" but a value was
found in file "terraform.tfvars". To use this value, add a "variable" block to
the configuration.

Using a variables file to set an undeclared variable is deprecated and will
become an error in a future release. If you wish to provide certain "global"
settings to all configurations in your organization, use TF_VAR_...
environment variables to set these instead.
[0m[0m
[33m
[1m[33mWarning: [0m[0m[1mValues for undeclared variables[0m

[0mIn addition to the other similar warnings shown, 5 other variable(s) defined
without being declared.
[0m[0m
[33m
[1m[33mWarning: [0m[0m[1mInterpolation-only expressions are deprecated[0m

[0m  on modules/rds/rds.tf line 31, in resource "aws_db_subnet_group" "rds_subgroup":
  31:   subnet_ids = [[4m"${var.db_subnets[0]}"[0m, "${var.db_subnets[1]}"]
[0m
Terraform 0.11 and earlier required all non-constant expressions to be
provided via interpolation syntax, but this pattern is now deprecated. To
silence this warning, remove the "${ sequence from the start and the }"
sequence from the end of this expression, leaving just the inner expression.

Template interpolation syntax is still used to construct strings from
expressions when the template includes multiple interpolation sequences or a
mixture of literal strings and interpolations. This deprecation applies only
to templates that consist entirely of a single interpolation sequence.

(and 6 more similar warnings elsewhere)
[0m[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

Releasing state lock. This may take a few moments...
